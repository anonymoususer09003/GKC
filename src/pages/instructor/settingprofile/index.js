import React, { useState, useEffect } from 'react';
import Head from 'next/head';
import { Navbar, TutorNavbar, Footer } from '../../../components';
import { MdEmail, MdLocationOn, MdArrowForwardIos } from 'react-icons/md';
import { FiEdit } from 'react-icons/fi';
import Image from 'next/image';
import { useRouter } from 'next/router';
import { withRole } from '../../../utils/withAuthorization';
import { connect } from 'react-redux';
import { fetchUser } from '../../../store/actions/userActions';
import styles from '../../../styles/Home.module.css';

function SettingProfile({ userInfo, loading, error, fetchUser }) {
  const navigation = useRouter();
  // console.log(userInfo);
  const onContinue = () => {
    navigation.push('/instructor/editprofile');
  };

  const onEditProfile = () => {
    navigation.push('/student/editprofile');
  };

  useEffect(() => {
    fetchUser();
  }, [fetchUser]);

  console.log(["courserser", userInfo?.coursesToTutorAndProficiencies]);

  // if (loading) {
  //   return <div>Loading...</div>;
  // }

  if (error) {
    return <div>Error: {error}</div>;
  }
  return (
    <>
      <Head>
        <title>Profile Setting</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <TutorNavbar isLogin={true} />
      <main className="container-fluid">
        <div
          className={`p-5 ${styles.instructorProfile}`}
          style={{
            minHeight: '90vh',
            maxWidth: '1700px',
            margin: 'auto',
            color: '#48494B',
          }}
        >
          <div className="row">
            <div
              className={`col-12 col-md-4 position-relative ${styles.cardShadow}`}
            >
              <div className="shadow rounded-10 bg-white py-4">
                <div className={`px-4 ${styles.instructorCards}`}>
                  <div
                    className="bg_primary rounded-circle position-absolute d-flex justify-content-center align-items-center"
                    style={{ top: '-40px', width: '105px', height: '105px' }}
                  >
                    <Image
                      src="/assets/student-preview.png"
                      alt="profile image"
                      width={100}
                      height={100}
                      priority
                      className="rounded-circle bg-light"
                    />
                  </div>
                  <div className="d-flex justify-content-end">
                    <p className=" bg_secondary text-white p-2 rounded d-flex align-items-center gap-2 fw-bold">
                      <MdEmail style={{ fontSize: '20px' }} />
                      {userInfo?.email}
                    </p>
                  </div>
                  <h5 className="fw-bold pb-2">
                    {userInfo?.firstName} {userInfo?.lastName}
                  </h5>

                  <div className="d-flex gap-1 gap-2 pb-3 ">
                    <MdLocationOn className="h5 p-0 m-0" />
                    <small>
                      {userInfo?.address1}, {userInfo?.city},{' '}
                      {userInfo?.zipCode} <br />
                      {userInfo?.state}, {userInfo?.country}
                    </small>
                  </div>
                  <hr className="bg_secondary" />
                  <h4 className="p-0 m-0 py-2 fw-bold">Bio</h4>
                  <div>{userInfo?.instructorBio} </div>

                  <div className="d-flex gap-2 justify-content-center py-3 pt-5">
                    <button
                      className="w-50 btn_primary text-light p-2 rounded fw-bold d-flex align-items-center justify-content-center gap-2"
                      onClick={() => onContinue()}
                    >
                      <FiEdit /> Edit Profile
                    </button>
                  </div>
                </div>
              </div>
            </div>
            <div className="col-12 col-md-8">
              <div
                className={`shadow rounded-10 p-5 bg-white ${styles.instructorCards}`}
              >
                <div className="row">
                  <div className="col-12 col-md-3">
                    <h5 className="fw-bold ">Hourly Rate</h5>
                    <h2 className="fw-bold">${userInfo?.hourlyRate}/hr</h2>
                  </div>

                  <div className="col-12 col-md-3 border-start px-4 border_primary">
                    <h5 className="fw-bold m-0 p-0">Delivery Mode</h5>
                    <ul className="m-0 px-3 py-2 primary-list">
                      {userInfo?.deliveryModes.map((v, i) => {
                        return <li className="fw-bold m-0 p-0">{v.name}</li>;
                      })}
                    </ul>
                  </div>

                  <div className="col-12 col-md-5 border-start px-4 border_primary">
                    <h5 className="fw-bold m-0 p-0">
                      Groups you have expertise to teach
                    </h5>

                    <ul className="m-0 px-3 py-2 primary-list">
                      {userInfo?.gradesToTutor.map((v, i) => {
                        return (
                          <li className="fw-bold m-0 p-0">
                            {v.name} &#40;{v.description}&#41;
                          </li>
                        );
                      })}
                    </ul>
                  </div>
                </div>
                <div className="row">
                  <div className="col pt-5">
                    <h5 className="fw-bold m-0 p-0">
                      Spoken Language Preference
                    </h5>
                    <ul className="m-0 px-3 py-2 primary-list ">
                      {userInfo?.languagePreference.map((v, i) => {
                        return <li className="fw-bold m-0 p-0">{v.name}</li>;
                      })}
                    </ul>
                  </div>

                  <div className="col pt-5">
                    <h5 className="fw-bold m-0 p-0">
                      Accept Interview Request
                    </h5>
                    <ul className="m-0 px-3 py-2 primary-list">
                      <li className="fw-bold m-0 p-0">
                        {userInfo?.acceptInterviewRequest ? 'Yes' : 'No'}
                      </li>
                    </ul>
                  </div>
                </div>
              </div>

              <div
                className={`shadow rounded-10 p-5 bg-white my-4 ${styles.instructorCards}`}
              >
                <div className="row m-0 p-0 ">
                  <div className="col ">
                    <h4 className="fw-bold m-0 p-0">Course/s you teach</h4>
                  </div>
                  <div className="col ">
                    <h4 className="fw-bold h5 m-0 p-0">
                      Proficiency of students you'd rather teach
                    </h4>
                  </div>
                  {userInfo?.coursesToTutorAndProficiencies.map((v, i) => {
                    return (
                      <div className="row m-0 p-0 py-2 pt-4" key={i}>
                        <div className="col d-flex align-items-center gap-2 primary-list">
                          <li className="fw-bold m-0 p-0 fw-lighter">
                            {v.course.name}
                          </li>
                        </div>
                        <div className="col ">
                          <ul className="m-0 d-flex flex-wrap gap-4 primary-list">
                            {v.proficiencies.map((val) => {
                              console.log(val);
                              return (
                                <li className="fw-bold m-0 p-0" key={val.id}>
                                  {val.name}
                                </li>
                              );
                            })}
                          </ul>
                        </div>
                      </div>
                    );
                  })}
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>

      <Footer />
    </>
  );
}

const mapStateToProps = (state) => ({
  userInfo: state.user.userInfo,
  loading: state.user.loading,
  error: state.user.error,
});

export default withRole(
  connect(mapStateToProps, { fetchUser })(SettingProfile),
  ['Instructor']
);
