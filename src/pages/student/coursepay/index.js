import React, { useState } from "react";
import Head from "next/head";
import { Navbar, Footer } from "../../../components";
import { useRouter } from "next/router";
import PaymentForm from "@/components/stripe/PaymentForm";
import { withRole } from "../../../utils/withAuthorization";
import axios from "axios";

function StudentRegistrationCCPay() {
  const navigation = useRouter();
  const { start, durationInHours, classFrequency,studentId, courseId, instructorId, eventInPerson } = navigation.query;
  const [whoPaysId, setWhoPaysId] = useState('');

  const scheduleSaved = async () => {
    try {
      var typ = JSON.parse(window.localStorage.getItem("gkcAuth"));
      const res = await axios.post(
        `http://34.227.65.157/event/create-class-saved-payment-method`,
        {
          start: start,
          durationInHours: durationInHours,
          classFrequency: classFrequency,
          courseId: courseId,
          studentId:  studentId,
          whoPaysId: whoPaysId,
          instructorId: instructorId,
          eventInPerson: eventInPerson,
        },
        {
          headers: {
            Authorization: `Bearer ${typ.accessToken}`,
          },
        }
      );
      console.log(res.data);
    } catch (error) {
      console.error("Error fetching profile data:", error);
    }
  };



  const scheduleNoSaved = async () => {
    try {
      var typ = JSON.parse(window.localStorage.getItem("gkcAuth"));
      const res = await axios.post(
        `http://34.227.65.157/event/create-class-no-saved-payment-method`,
        {
          classDto: {
            start: start,
            durationInHours: durationInHours,
            classFrequency: classFrequency,
            courseId: courseId,
            studentId:  studentId,
            whoPaysId: whoPaysId,
            instructorId: instructorId,
            eventInPerson: eventInPerson,
          },
          stripeResponseDTO: {
            paymentIntentId: string,
            paymentStatus: string
          }
        },
        {
          headers: {
            Authorization: `Bearer ${typ.accessToken}`,
          },
        }
      );
      console.log(res.data);
    } catch (error) {
      console.error("Error fetching profile data:", error);
    }
  };

 
  return (
    <>
      <Head>
        <title>Auth | CC Info</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container-fluid d-flex flex-column justify-content-between  min-vh-100">
        <Navbar isLogin={true} />
        <div className="row">
          <div
            className="col-12 col-lg-5 position-relative d-none d-lg-block"
            style={{
              backgroundImage: 'url("/assets/register_group.png")',
              height: "100vh",
              backgroundRepeat: "no-repeat",
              backgroundSize: "100% 100%",
            }}
          ></div>
          <div className="col-12 col-lg-7 d-flex justify-content-center align-items-center ">
            <div className="w-100 p-5">
              <div>
                <h5 className="text-dark fw-bold">Payment Information</h5>

                <div className="py-2">
                  <div className="d-flex gap-3 py-1">
                    <p className="p-0 m-0 fw-bold">Hourly Rate:</p>
                    <p className="p-0 m-0 fw-bold">$30</p>
                  </div>
                  <div className="d-flex gap-3 py-1">
                    <p className="p-0 m-0 fw-bold">No. of Hours:</p>
                    <p className="p-0 m-0 fw-bold">{durationInHours}</p>
                  </div>
                  <div className="d-flex gap-3 py-1">
                    <p className="p-0 m-0 fw-bold">Booking Fee:</p>
                    <p className="p-0 m-0 fw-bold">$0</p>
                  </div>
                  <div className="d-flex gap-3 py-1">
                    <p className="p-0 m-0 fw-bold">Total Due:</p>
                    <p className="p-0 m-0 fw-bold">$63</p>
                  </div>
                </div>
                <h5 className="text-dark fw-bold">
                  Who pays for this tutoring?
                </h5>

                <div className="py-2">
                  <select className="w-25 p-2 rounded outline-0 border border_gray  mb-3 " value={whoPaysId} onChange={(e)=> setWhoPaysId(e.target.value)}>
                    <option>Select</option>
                    <option value='1'>example@mail.com</option>
                    <option value='2'>example2@mail.com</option>
                  </select>
                </div>

                <h5 className="text-dark fw-bold">Use saved Credit Card?</h5>

                <div className="py-2">
                  <select className="w-25 p-2 rounded outline-0 border border_gray  mb-3 ">
                    <option>Select</option>
                    <option>Option 1</option>
                    <option>Option 2</option>
                  </select>
                </div>
                <PaymentForm title="Enter new credit card information" />
                <div className="form-check">
                  <input
                    className="form-check-input"
                    type="checkbox"
                    value=""
                    id="flexCheckDefault"
                  />
                  <label className="form-check-label" for="flexCheckDefault">
                    Save the payment information for future use
                  </label>
                </div>
                <div className="d-flex gap-2 justify-content-center mt-3">
                  <button
                    className="w-50 btn_primary text-light p-2 rounded fw-bold "
                    onClick={scheduleSaved}
                  >
                    Pay
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>

        <Footer />
      </main>
    </>
  );
}

export default withRole(StudentRegistrationCCPay, ["Student"]);